# Generated by Django 5.0.3 on 2024-06-17 19:33

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0014_paymentslitigation_total_paid_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NoticeSent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('completion_date', models.DateField(null=True)),
                ('acknowledgement', models.CharField(choices=[('Received', 'Received'), ('Refused', 'Refused'), ('Address not Found', 'Address not Found'), ('Addressee Left', 'Addressee Left'), ('Door Locked', 'Door Locked'), ('Informed to sender', 'Informed to sender'), ('Not claimed', 'Not claimed'), ('Addressee cannot be located', 'Addressee cannot be located'), ('Lost in transit', 'Lost in transit'), ('Insufficient Address', 'Insufficient Address'), ('No such person', 'No such person'), ('Deceased', 'Deceased')], max_length=100, null=True)),
                ('acknowledgement_received_date', models.DateField(null=True)),
                ('tracking_number', models.CharField(max_length=500)),
                ('notice_document', models.FileField(null=True, upload_to='notice_sent/')),
                ('sent_date', models.DateField()),
                ('reply_notice_given', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='NoticeReceived',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('received_date_client', models.DateField()),
                ('received_date_office', models.DateField()),
                ('received_employee_name', models.CharField(blank=True, max_length=255, null=True)),
                ('completion_date', models.DateField()),
                ('acknowledgement', models.CharField(choices=[('Received', 'Received'), ('Refused', 'Refused'), ('Address not Found', 'Address not Found'), ('Addressee Left', 'Addressee Left'), ('Door Locked', 'Door Locked'), ('Informed to sender', 'Informed to sender'), ('Not claimed', 'Not claimed'), ('Addressee cannot be located', 'Addressee cannot be located'), ('Lost in transit', 'Lost in transit'), ('Insufficient Address', 'Insufficient Address'), ('No such person', 'No such person'), ('Deceased', 'Deceased')], max_length=100, null=True)),
                ('acknowledgement_received_date', models.DateField(null=True)),
                ('reply_notice_sent', models.BooleanField(default=False)),
                ('reply_notice_sent_date', models.DateField(null=True)),
                ('reply_notice_document', models.FileField(null=True, upload_to='notice_received/')),
                ('ni_deadline', models.DateField(null=True)),
                ('received_employee', models.ForeignKey(blank=True, limit_choices_to={'groups__name': 'Employees'}, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='NoticeReceivedRejoinder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acknowledgement', models.CharField(choices=[('Received', 'Received'), ('Refused', 'Refused'), ('Address not Found', 'Address not Found'), ('Addressee Left', 'Addressee Left'), ('Door Locked', 'Door Locked'), ('Informed to sender', 'Informed to sender'), ('Not claimed', 'Not claimed'), ('Addressee cannot be located', 'Addressee cannot be located'), ('Lost in transit', 'Lost in transit'), ('Insufficient Address', 'Insufficient Address'), ('No such person', 'No such person'), ('Deceased', 'Deceased')], max_length=100, null=True)),
                ('acknowledgement_received_date', models.DateField(null=True)),
                ('notice_document', models.FileField(null=True, upload_to='notice_received/')),
                ('sent_date', models.DateField()),
                ('reply_notice_given', models.BooleanField(default=False)),
                ('notice_received', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.noticereceived')),
            ],
        ),
        migrations.CreateModel(
            name='NoticeSentRejoinder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acknowledgement', models.CharField(choices=[('Received', 'Received'), ('Refused', 'Refused'), ('Address not Found', 'Address not Found'), ('Addressee Left', 'Addressee Left'), ('Door Locked', 'Door Locked'), ('Informed to sender', 'Informed to sender'), ('Not claimed', 'Not claimed'), ('Addressee cannot be located', 'Addressee cannot be located'), ('Lost in transit', 'Lost in transit'), ('Insufficient Address', 'Insufficient Address'), ('No such person', 'No such person'), ('Deceased', 'Deceased')], max_length=100, null=True)),
                ('acknowledgement_received_date', models.DateField(null=True)),
                ('notice_document', models.FileField(null=True, upload_to='notice_sent/')),
                ('sent_date', models.DateField()),
                ('reply_notice_given', models.BooleanField(default=False)),
                ('notice_sent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.noticesent')),
            ],
        ),
        migrations.CreateModel(
            name='NoticeSentReply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reply_notice_document', models.FileField(null=True, upload_to='notice_sent/')),
                ('sent_date', models.DateField()),
                ('notice_sent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.noticesent')),
            ],
        ),
    ]
